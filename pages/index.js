import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import Hero from "components/home/hero";
import Aizone from "components/home/ai-zone";
import Trustworthy from "components/home/trustworthy";
import Tutorials from "components/home/tutorials";
import Sponsor from "components/home/sponsor";
import FlowSliderSec from "components/home/flowSliderSec";
import Trending from "components/home/trending";
import Download from "components/home/download";
// import Loader from 'components/snippets/loader';

// const inter = Inter({ subsets: ['latin'] })

// import { io } from "socket.io-client"
// import { useState } from "react";

export default function Home(props) {

  // const socket = io("http://localhost:5000", { transports: ['websocket'] });
  
  // const [nama, steNama] = useState("surinder");
  // const handlepost = (e) => {
  //   e.preventDefault();
  //   socket.emit("roomsttu",{post : nama});
  // }

  // socket.on('roomsttu', function(msg) {
  //   console.log(msg,'============msg ');
  // });

  return (
    <>
    
      <Head>
        <title>BLC-Exchange</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" /> 
      </Head>
      {/* top bar */}
      {/* <button onClick={(e) => handlepost(e)}>Submit</button> */}
      <Hero /> 
      <FlowSliderSec />
      <Aizone />
      <Trending coins={props.coins}/>
      <Trustworthy />
      <Download /> 
      <Tutorials />
      <Sponsor />
      {/* <Loader /> */}
    </>
  );
}

export async function getServerSideProps() {
  
  let tokenList = await fetch(`${process.env.NEXT_PUBLIC_BASEURL}/token/marketcoin`, {
    method: "GET"
  }).then(response => response.json());

  return {
    props: { 
      coins: tokenList.data.data,
     }, // will be passed to the page component as props
  };
}

// export async function getServerSideProps(context) {
//   let nav = await fetch(process.env.NEXT_PUBLIC_BASEURL+ "/hello")
//   .then(res => res.json())
//   .then((data) => {
//     console.log(data)
//     /* process your data further */
// })
// .catch((error) => console.error(error));
//   return {
//     props: {
//       menus : ''
//     }, // will be passed to the page component as props
//   }
// }
